/*
 * DSSApplet.java
 *
 * Created on June 18, 2002, 1:19 PM
 */

/**
 *
 * @author  sposch
 */
import java.awt.*;
import java.net.*;
import java.lang.*;
import java.util.*;
import java.applet.AppletContext;

import javax.swing.*;

public class DSSApplet extends javax.swing.JApplet {

    /** Creates new form DSSApplet */
    public DSSApplet() {
        initComponents();
        
        //Disable all unusable gui items
        preserveWhat.setEnabled(false);
        dataType.setEnabled(false);
        rasterDataType.setEnabled(false);
        submitButton.setEnabled(false);
        
        //Set background of applet to white
        getContentPane().setBackground(Color.white);
        
        //set applet visible
        this.setVisible(true);
    }

    /////////////////////////////////////////////////////////////////////
    //The following code was generated by Forte for Java CE 3.0        //
    /////////////////////////////////////////////////////////////////////
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        mapType = new javax.swing.JComboBox();
        preserveWhat = new javax.swing.JComboBox();
        dataType = new javax.swing.JComboBox();
        rasterDataType = new javax.swing.JComboBox();
        submitButton = new javax.swing.JButton();
        
        getContentPane().setLayout(new java.awt.GridLayout(5, 0, 0, 20));
        
        mapType.setBackground(java.awt.Color.white);
        mapType.setMaximumRowCount(5);
        mapType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Type of Area to Map", "----------", "Global", "Continental", "Regional" }));
        mapType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mapTypeActionPerformed(evt);
            }
        });
        
        getContentPane().add(mapType);
        
        preserveWhat.setBackground(java.awt.Color.white);
        preserveWhat.setMaximumRowCount(5);
        preserveWhat.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select What to Preserve", "----------", "Area", "Shape", "Compromise" }));
        preserveWhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                preserveWhatActionPerformed(evt);
            }
        });
        
        getContentPane().add(preserveWhat);
        
        dataType.setBackground(java.awt.Color.white);
        dataType.setMaximumRowCount(4);
        dataType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Type of Data", "----------", "Raster", "Vector" }));
        dataType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataTypeActionPerformed(evt);
            }
        });
        
        getContentPane().add(dataType);
        
        rasterDataType.setBackground(java.awt.Color.white);
        rasterDataType.setMaximumRowCount(4);
        rasterDataType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Type of Raster Data", "----------", "Continuous", "Thematic" }));
        rasterDataType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rasterDataTypeActionPerformed(evt);
            }
        });
        
        getContentPane().add(rasterDataType);
        
        submitButton.setBackground(java.awt.Color.white);
        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });
        
        getContentPane().add(submitButton);
        
    }//GEN-END:initComponents
    /////////////////////////////////////////////////////////////////////
    //END OF GENERATED CODE                                            //
    /////////////////////////////////////////////////////////////////////
    
    
    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        
        //Get index of selected item in preserve box
        int i = preserveWhat.getSelectedIndex();
        
        //If area being preserved, goto area page
        if(i == 2)
        {
            String location;
            
            //Get location from html file
            location = getParameter("location2");

            //Try to make connection to new web page
            try
            {
                URL url;
                url = new URL(location);

                AppletContext browser = getAppletContext();

                browser.showDocument(url);
            }

            //Handle malformed url exception in connection attempt
            catch(MalformedURLException urlException)
            {
                urlException.printStackTrace();
            }
        }
        
        //If shape being preserved, goto shape page
        if(i == 3)
        {
            String location;
            
            //Get location from html file
            location = getParameter("location4");

            //Try to make connection to new web page
            try
            {
                URL url;
                url = new URL(location);

                AppletContext browser = getAppletContext();

                browser.showDocument(url);
            }

            //Handle malformed url exception in connection attempt
            catch(MalformedURLException urlException)
            {
                urlException.printStackTrace();
            }
        }
        
        //If compromise, goto compromise page
        if(i == 4)
        {
            String location;
            
            //Get location from html file
            location = getParameter("location3");

            //Try to make connection to new web page
            try
            {
                URL url;
                url = new URL(location);

                AppletContext browser = getAppletContext();

                browser.showDocument(url);
            }

            //Handle malformed url exception in connection attempt
            catch(MalformedURLException urlException)
            {
                urlException.printStackTrace();
            }
        }
    }//GEN-LAST:event_submitButtonActionPerformed

    private void rasterDataTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rasterDataTypeActionPerformed

        //Get index of selected item in raster box
        int i = rasterDataType.getSelectedIndex();
        
        //If invalid selection, reset to default value and set submit disabled
        if(i < 2)
        {
            rasterDataType.setSelectedIndex(0);
            submitButton.setEnabled(false);
            
            //If data type box is vector, set submit enabled
            if(dataType.getSelectedIndex() == 3)
            {
                submitButton.setEnabled(true);
            }
        }
        
        //If valid selection, set submit enabled
        if(i >= 2)
        {
            submitButton.setEnabled(true);
        }
    }//GEN-LAST:event_rasterDataTypeActionPerformed

    private void dataTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataTypeActionPerformed
        
        //Get index of selected item in data type box
        int i = dataType.getSelectedIndex();
        
        //If invalid selection, set to default value and set all following
        //gui components disabled
        if(i < 2)
        {
            dataType.setSelectedIndex(0);
            rasterDataType.setEnabled(false);
            submitButton.setEnabled(false);
        }
        
        //If Raster, set box 4 enabled, and set button invisible
        if(i == 2)
        {
            rasterDataType.setEnabled(true);
            submitButton.setEnabled(false);
        }
        
        //If vector, set raster data type box disabled, and set submit enabled
        if(i == 3)
        {
            rasterDataType.setEnabled(false);
            submitButton.setEnabled(true);
        }
        
        //Set following gui components to default values
        rasterDataType.setSelectedIndex(0);
    }//GEN-LAST:event_dataTypeActionPerformed

    private void preserveWhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_preserveWhatActionPerformed
       
        //Get selected index of preserve box
        int i = preserveWhat.getSelectedIndex();
        
        //If invalid selection, set to default value and set all following
        //gui components to disabled
        if(i < 2)
        {
            preserveWhat.setSelectedIndex(0);
            dataType.setEnabled(false);
            rasterDataType.setEnabled(false);
            submitButton.setEnabled(false);
        }
        
        //If valid selection, set data type box enabled
        if(i >= 2)
        {   
            dataType.setEnabled(true);
        }
        
        //Set following gui components to default values
        dataType.setSelectedIndex(0);
        rasterDataType.setSelectedIndex(0);        
    }//GEN-LAST:event_preserveWhatActionPerformed

    private void mapTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mapTypeActionPerformed
       
        //Get selected index of map type box
        int i = mapType.getSelectedIndex();
        
        //If invalid selection, set to default value and set all following
        //gui components to disabled
        if(i < 2)
        {
            mapType.setSelectedIndex(0);
            preserveWhat.setEnabled(false);
            dataType.setEnabled(false);
            rasterDataType.setEnabled(false);
            submitButton.setEnabled(false);
        }
        
        //If Global, set preserve box enabled
        if(i == 2)
        {
            //If "compromise" missing from preserve box, add it back
            if(preserveWhat.getItemCount() < 5)
            {
                preserveWhat.addItem("Compromise");
            }
            
            preserveWhat.setEnabled(true);
        }
        
        //If Continental, transfer to Continental web page
        if(i == 3)
        {
            String location;
            
            //Get location from html file
            location = getParameter("location1");
            
            //Try to make connection to new web page
            try
            {
                URL url;
                url = new URL(location);
                           
                AppletContext browser = getAppletContext();
            
                browser.showDocument(url);
            }
            
            //Handle malformed url exception in connection attempt
            catch(MalformedURLException urlException)
            {
                urlException.printStackTrace();
            }
        }
        
        //If regional, transfer to Regional page
        if(i == 4)
        {
            String location;
            
            //Get location from html file
            location = getParameter("location0");
            
            //Try to make connection to new web page
            try
            {
                URL url;
                url = new URL(location);
                           
                AppletContext browser = getAppletContext();
            
                browser.showDocument(url);
            }
            
            //Handle malformed url exception in connection attempt
            catch(MalformedURLException urlException)
            {
                urlException.printStackTrace();
            }
        }
        
        //Set following gui components to default values
        preserveWhat.setSelectedIndex(0);
        dataType.setSelectedIndex(0);
        rasterDataType.setSelectedIndex(0);
    }//GEN-LAST:event_mapTypeActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox mapType;
    private javax.swing.JComboBox preserveWhat;
    private javax.swing.JComboBox dataType;
    private javax.swing.JComboBox rasterDataType;
    private javax.swing.JButton submitButton;
    // End of variables declaration//GEN-END:variables

}
