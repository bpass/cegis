#############################################################################
# Makefile for building: new
# Generated by qmake (1.07a) (Qt 3.3.3) on: Wed Jun 22 12:22:10 2005
# Project:  new.pro
# Template: app
# Command: $(QMAKE) -o Makefile new.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -O2 
CXXFLAGS = -pg -g -Wno-deprecated -pipe -Wall -W -O2 
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/work/mosixFastProjections/include/Projector \
		   -I/usr/src/linux/include \
		   -I/work/mosixFastProjections/include \
		   -I/work/mosixFastProjections/ImageLib \
		   -I/work/mosixFastProjections/
LINK     = g++
LFLAGS   = -pg -lProjectionMesh -lMathLib -lProjectionIO -lImageLib \
           -lgeotiff -ltiff -lProjection -lMiscUtils \
           -lpthread -lgctpc -lboost_thread -lpng -ljpeg

LIBS     = -L/work/mosixFastProjections/lib \
		   -L/usr/local/lib \
		   -L/usr/lib
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = .obj

####### Files

HEADERS = FromMultiGeoProjector.h \
		Globals.h \
		Math.h \
		Math.hpp \
		ProjectorInterface.h \
		ProjImageData.h \
		ProjImageFactory.h \
		ProjImageIn.h \
		ProjImageInInterface.h \
		ProjImageInList.h \
		ProjImageOut.h \
		ProjImageOutInterface.h \
		ProjImageParams.h \
		ProjImageScale.h
SOURCES = driver.cpp \
		FromMultiGeoProjector.cpp \
		ProjImageData.cpp \
		ProjImageFactory.cpp \
		ProjImageIn.cpp \
		ProjImageInList.cpp \
		ProjImageOut.cpp \
		ProjImageParams.cpp
OBJECTS = ${OBJECTS_DIR}/driver.o \
		  ${OBJECTS_DIR}/FromMultiGeoProjector.o \
		  ${OBJECTS_DIR}/ProjImageData.o \
		  ${OBJECTS_DIR}/ProjImageFactory.o \
	      ${OBJECTS_DIR}/ProjImageIn.o \
	  	  ${OBJECTS_DIR}/ProjImageInList.o \
		  ${OBJECTS_DIR}/ProjImageOut.o \
		  ${OBJECTS_DIR}/ProjImageParams.o 

POBJECTS =/work/mosixFastProjections/include/Projector/.obj/ProjectionParams.o \
	    /work/mosixFastProjections/include/Projector/.obj/ProjectorException.o \
        /work/mosixFastProjections/include/Projector/.obj/ProjUtil.o \
        /work/mosixFastProjections/.obj/JPEGImageOFile.o \
      	/work/mosixFastProjections/.obj/PNGImageOFile.o 
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = 
OBJMOC = 
DIST	   = new.pro
QMAKE_TARGET = new
DESTDIR  = 
TARGET   = reproject

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

$(OBJECTS_DIR)/%.o: %.cpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	$(LINK) -o $(TARGET) $(OBJECTS) $(POBJECTS) $(OBJMOC) $(OBJCOMP) $(LFLAGS) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: new.pro  /usr/lib/qt3/mkspecs/default/qmake.conf /usr/lib/qt3/lib/libqt-mt.prl
	$(QMAKE) -o Makefile new.pro
qmake: 
	@$(QMAKE) -o Makefile new.pro

dist: 
	@mkdir -p .tmp/new && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/new/ && ( cd `dirname .tmp/new` && $(TAR) new.tar new && $(GZIP) new.tar ) && $(MOVE) `dirname .tmp/new`/new.tar.gz . && $(DEL_FILE) -r .tmp/new

mocclean:

uiclean:

yaccclean:
lexclean:
clean:
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

driver.o: driver.cpp ProjImageParams.h \
		ProjImageFactory.h \
		FromMultiGeoProjector.h \
		ProjImageInInterface.h \
		ProjImageInList.h \
		ProjImageScale.h \
		Globals.h \
		Math.h \
		Math.hpp \
		ProjectorInterface.h \
		ProjImageOut.h \
		ProjImageData.h \
		ProjImageOutInterface.h

FromMultiGeoProjector.o: FromMultiGeoProjector.cpp FromMultiGeoProjector.h \
		Math.h \
		ProjImageParams.h \
		ProjectorInterface.h \
		ProjImageOut.h \
		ProjImageInList.h \
		Globals.h \
		ProjImageData.h \
		ProjImageInInterface.h \
		ProjImageOutInterface.h \
		ProjImageScale.h \
		Math.hpp

ProjImageData.o: ProjImageData.cpp ProjImageData.h \
		ProjImageInInterface.h \
		ProjImageOutInterface.h \
		ProjImageScale.h \
		Globals.h \
		Math.h \
		Math.hpp

ProjImageFactory.o: ProjImageFactory.cpp ProjImageIn.h \
		ProjImageFactory.h \
		Globals.h \
		ProjImageData.h \
		ProjectorInterface.h \
		ProjImageParams.h \
		ProjImageInInterface.h \
		ProjImageOutInterface.h \
		ProjImageScale.h \
		Math.h \
		Math.hpp \
		ProjImageInList.h

ProjImageIn.o: ProjImageIn.cpp ProjImageIn.h \
		Globals.h \
		ProjImageData.h \
		ProjectorInterface.h \
		ProjImageParams.h \
		ProjImageInInterface.h \
		ProjImageOutInterface.h \
		ProjImageScale.h \
		Math.h \
		Math.hpp

ProjImageInList.o: ProjImageInList.cpp ProjImageInList.h \
		ProjImageInInterface.h \
		ProjImageScale.h \
		Globals.h \
		Math.h \
		Math.hpp

ProjImageOut.o: ProjImageOut.cpp ProjImageOut.h \
		ProjImageData.h \
		ProjImageInInterface.h \
		ProjImageOutInterface.h \
		ProjImageScale.h \
		Globals.h \
		Math.h \
		Math.hpp

ProjImageParams.o: ProjImageParams.cpp ProjImageParams.h

####### Install

install:  

uninstall:  

